openapi: 3.0.3
info:
  title: CRM Core API
  description: Core API for CRM system handling Auth, Leads, Interactions, Appointments, and Payments
  version: 1.0.0
  contact:
    name: Backend Team
    email: backend@crm.com

servers:
  - url: http://localhost:3001
    description: Development server
  - url: https://api.crm.com
    description: Production server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required:
        - error
        - message
        - statusCode
      properties:
        error:
          type: string
          example: "BAD_REQUEST"
        message:
          type: string
          example: "Invalid input data"
        statusCode:
          type: integer
          example: 400
        details:
          type: object
          additionalProperties: true

    PaginationMeta:
      type: object
      required:
        - page
        - limit
        - total
        - totalPages
      properties:
        page:
          type: integer
          minimum: 1
          example: 1
        limit:
          type: integer
          minimum: 1
          maximum: 100
          example: 20
        total:
          type: integer
          minimum: 0
          example: 150
        totalPages:
          type: integer
          minimum: 0
          example: 8

    User:
      type: object
      required:
        - id
        - email
        - name
        - role
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: email
          example: "user@example.com"
        name:
          type: string
          example: "John Doe"
        role:
          type: string
          enum: [ADMIN, MANAGER, SALES, SUPPORT]
          example: "SALES"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

    Lead:
      type: object
      required:
        - id
        - name
        - email
        - phone
        - status
        - source
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        name:
          type: string
          example: "Jane Smith"
        email:
          type: string
          format: email
          example: "jane@example.com"
        phone:
          type: string
          example: "+1234567890"
        status:
          type: string
          enum: [NEW, CONTACTED, QUALIFIED, PROPOSAL, NEGOTIATION, CLOSED_WON, CLOSED_LOST]
          example: "NEW"
        source:
          type: string
          enum: [WEBSITE, SOCIAL_MEDIA, REFERRAL, COLD_CALL, EMAIL_CAMPAIGN, OTHER]
          example: "WEBSITE"
        score:
          type: integer
          minimum: 0
          maximum: 100
          nullable: true
          example: 75
        ownerId:
          type: string
          format: uuid
          nullable: true
          example: "123e4567-e89b-12d3-a456-426614174000"
        owner:
          $ref: '#/components/schemas/User'
        notes:
          type: string
          nullable: true
          example: "Interested in premium package"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

    Interaction:
      type: object
      required:
        - id
        - leadId
        - userId
        - type
        - content
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        leadId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        userId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        type:
          type: string
          enum: [CALL, EMAIL, MEETING, NOTE, SMS]
          example: "CALL"
        content:
          type: string
          example: "Called to discuss pricing options"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        user:
          $ref: '#/components/schemas/User'

    Appointment:
      type: object
      required:
        - id
        - leadId
        - userId
        - title
        - scheduledAt
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174003"
        leadId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        userId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          example: "Product Demo"
        description:
          type: string
          nullable: true
          example: "Demo of premium features"
        scheduledAt:
          type: string
          format: date-time
          example: "2024-01-20T14:00:00Z"
        status:
          type: string
          enum: [SCHEDULED, COMPLETED, CANCELLED, NO_SHOW]
          example: "SCHEDULED"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        user:
          $ref: '#/components/schemas/User'
        lead:
          $ref: '#/components/schemas/Lead'

    Payment:
      type: object
      required:
        - id
        - leadId
        - amount
        - currency
        - status
        - paymentLink
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174004"
        leadId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        amount:
          type: number
          format: float
          minimum: 0
          example: 299.99
        currency:
          type: string
          example: "USD"
        status:
          type: string
          enum: [PENDING, PAID, FAILED, CANCELLED]
          example: "PENDING"
        paymentLink:
          type: string
          format: uri
          example: "https://payment.crm.com/pay/123e4567-e89b-12d3-a456-426614174004"
        description:
          type: string
          nullable: true
          example: "Premium package payment"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

paths:
  /api/core/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user with email and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                  - user
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/core/auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user
      description: Get current authenticated user information
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/core/leads:
    get:
      tags:
        - Leads
      summary: Get leads list
      description: Get paginated list of leads with optional filters
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          description: Filter by status
          schema:
            type: string
            enum: [NEW, CONTACTED, QUALIFIED, PROPOSAL, NEGOTIATION, CLOSED_WON, CLOSED_LOST]
        - name: source
          in: query
          description: Filter by source
          schema:
            type: string
            enum: [WEBSITE, SOCIAL_MEDIA, REFERRAL, COLD_CALL, EMAIL_CAMPAIGN, OTHER]
        - name: q
          in: query
          description: Search query (name, email, phone)
          schema:
            type: string
      responses:
        '200':
          description: Leads list
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lead'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Leads
      summary: Create new lead
      description: Create a new lead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - phone
                - source
              properties:
                name:
                  type: string
                  example: "Jane Smith"
                email:
                  type: string
                  format: email
                  example: "jane@example.com"
                phone:
                  type: string
                  example: "+1234567890"
                source:
                  type: string
                  enum: [WEBSITE, SOCIAL_MEDIA, REFERRAL, COLD_CALL, EMAIL_CAMPAIGN, OTHER]
                  example: "WEBSITE"
                notes:
                  type: string
                  nullable: true
                  example: "Interested in premium package"
      responses:
        '201':
          description: Lead created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/core/leads/{id}:
    get:
      tags:
        - Leads
      summary: Get lead by ID
      description: Get a specific lead by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Lead ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lead details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      tags:
        - Leads
      summary: Update lead
      description: Update lead status, owner, or other fields
      parameters:
        - name: id
          in: path
          required: true
          description: Lead ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [NEW, CONTACTED, QUALIFIED, PROPOSAL, NEGOTIATION, CLOSED_WON, CLOSED_LOST]
                ownerId:
                  type: string
                  format: uuid
                  nullable: true
                notes:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Lead updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/core/leads/{id}/interactions:
    post:
      tags:
        - Interactions
      summary: Create interaction
      description: Create a new interaction for a lead
      parameters:
        - name: id
          in: path
          required: true
          description: Lead ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - content
              properties:
                type:
                  type: string
                  enum: [CALL, EMAIL, MEETING, NOTE, SMS]
                  example: "CALL"
                content:
                  type: string
                  example: "Called to discuss pricing options"
      responses:
        '201':
          description: Interaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/core/leads/{id}/appointments:
    post:
      tags:
        - Appointments
      summary: Create appointment
      description: Create a new appointment for a lead
      parameters:
        - name: id
          in: path
          required: true
          description: Lead ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - scheduledAt
              properties:
                title:
                  type: string
                  example: "Product Demo"
                description:
                  type: string
                  nullable: true
                  example: "Demo of premium features"
                scheduledAt:
                  type: string
                  format: date-time
                  example: "2024-01-20T14:00:00Z"
      responses:
        '201':
          description: Appointment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/core/appointments/{id}:
    patch:
      tags:
        - Appointments
      summary: Update appointment
      description: Update appointment status
      parameters:
        - name: id
          in: path
          required: true
          description: Appointment ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [SCHEDULED, COMPLETED, CANCELLED, NO_SHOW]
                  example: "COMPLETED"
      responses:
        '200':
          description: Appointment updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Appointment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/core/leads/{id}/payment-link:
    post:
      tags:
        - Payments
      summary: Create payment link
      description: Create a payment link for a lead (stub implementation)
      parameters:
        - name: id
          in: path
          required: true
          description: Lead ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - currency
              properties:
                amount:
                  type: number
                  format: float
                  minimum: 0
                  example: 299.99
                currency:
                  type: string
                  example: "USD"
                description:
                  type: string
                  nullable: true
                  example: "Premium package payment"
      responses:
        '201':
          description: Payment link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/core/leads/{id}/score:
    post:
      tags:
        - AI Integration
      summary: Score lead
      description: Calculate lead score using AI service and update lead
      parameters:
        - name: id
          in: path
          required: true
          description: Lead ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lead scored successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - score
                  - lead
                properties:
                  score:
                    type: integer
                    minimum: 0
                    maximum: 100
                    example: 75
                  lead:
                    $ref: '#/components/schemas/Lead'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: AI service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

tags:
  - name: Authentication
    description: User authentication endpoints
  - name: Leads
    description: Lead management endpoints
  - name: Interactions
    description: Lead interaction endpoints
  - name: Appointments
    description: Appointment management endpoints
  - name: Payments
    description: Payment processing endpoints
  - name: AI Integration
    description: AI service integration endpoints
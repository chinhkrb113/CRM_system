version: '3.8'

services:
  # MySQL database for core service
  core-db:
    image: mysql:8.0
    container_name: core-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: core_db
      MYSQL_USER: core_user
      MYSQL_PASSWORD: core_password
    ports:
      - "3307:3306"
    volumes:
      - core_db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  core-redis:
    image: redis:7-alpine
    container_name: core-redis
    ports:
      - "6381:6379"
    volumes:
      - core_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Core service
  api-core:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-core
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: mysql://core_user:core_password@core-db:3306/core_db
      REDIS_URL: redis://core-redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      AI_LEAD_SERVICE_URL: http://host.docker.internal:3001
    ports:
      - "3001:3001"
    depends_on:
      core-db:
        condition: service_healthy
      core-redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  core_db_data:
  core_redis_data:

networks:
  default:
    name: crm-network
    external: true